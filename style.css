*, *::before, *::after {
  box-sizing: border-box;
}

* {
  line-height: calc(1em + 0.5rem);
  margin: 0;
  color: var(--font-color);
}

:root {
  color-scheme: only dark;
  --font-color:   #FFF;
  --bg-color:     #112;
  --item-color:   #333;
  --green-color:    #090;
  --tab-color: #0C0;
  --bad-color:    #E11;
  --toggle-color: #455;
  --selected-color:  #06F;
  --roundness: .3em;
}

:root.light {
  color-scheme: only light;
  --font-color: #566;
  --bg-color:   #FFF;
  --item-color: #DDD;
}

html {
  font-size: 120%;
}

body {
  -webkit-font-smoothing: antialiased;
  font-family: sans-serif;
  background: var(--bg-color);
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

input, button, textarea, select {
  font-size: inherit;
  padding: .6em;
  border-radius: var(--roundness);
  border: none;
  background: var(--item-color);
}

textarea {
  resize: none;
}

button, select {
  cursor: pointer;
}

p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

#root, #__next {
  isolation: isolate;
}

.bottom {
  position: fixed;
  bottom: 0;
  left: 0;
}

label {
  display: flex;
  justify-content: end;
  align-items: center;
  gap: 1em;
}

label input:not([type=checkbox]), label select {
  width: 15em;
}

input[type=checkbox] {
  width: 2em;
  height: 2em;
  line-height: 2em;
  text-align: center;
  padding: 0;
  appearance: none;
}

input[type=checkbox]:checked {
  background: var(--selected-color);
}

input[type=checkbox]:checked::after {
  content: "âœ”";
}

main {
  padding: 1em 5em;
}

nav {
  display: flex;
}

nav button {
  width: 100%;
  border-radius: 0;
  background: var(--green-color);
  position: relative;
}

.active {
  background: var(--tab-color);
}

.active::after {
  border-bottom: 2px solid var(--selected-color);
  width: 5em;
  content: "";
  display: block;
  left: 50%;
  bottom: 0;
  position: absolute;
  transform: translateX(-50%);
}

.left {
  display: inline-flex;
  flex-direction: column;
  gap: .5em;
}

.grid {
  width: min-content;
  margin: 0 auto;
  display: grid;
  gap: 1em;
}

.auto {
  grid-template-columns: 30em 30em;
  grid-template-rows: 10em 10em 10em;
}

.double {
  grid-column-end: span 2;
}

.comments {
  grid-row-end: span 4;
}

.comments textarea {
  width: 100%;
  height: 100%;
}

.end label {
  flex-direction: column;
  align-items: start;
  justify-content: center;
}

.teleop {
  grid-template-columns: 30em 15em 15em;
  grid-template-rows: 10em 10em 10em;
}

.end {
  display: grid;
  gap: 1em;
  grid-template-columns: min-content 1fr;
  grid-template-rows: 8em 8em 8em 8em;
}

.end > div:not(.comments) {
  display: flex;
  justify-content: center;
  gap: 1em;
}

.qr {
  display: flex;
  flex-direction: column;
  gap: .5em;
  text-align: center;
  max-width: 25em;
  margin: 0 auto;
}

.qr div {
  display: flex;
  gap: 1em;
}

.qr > * {
  width: 100%;
}

.qr div label {
  flex-grow: 1;
}

.counter {
  display: flex;
  gap: .5em;
  align-items: center;
}

.counter button {
  display: inline-block;
  width: 5em;
  height: 100%;
}

.counter div {
  flex-grow: 1;
  text-align: center;
}

.toggle {
  min-width: 10em;
}

.toggled {
  background: var(--toggle-color);
}

.good {
  background: var(--green-color)
}

.bad {
  background: var(--bad-color);
}

.code {
  display: inline-flex;
  flex-direction: column;
  text-align: center;
  width: 15em;
}

.codes {
  display: flex;
  flex-wrap: wrap;
  gap: .5em;
  margin-top: .5em;
}
